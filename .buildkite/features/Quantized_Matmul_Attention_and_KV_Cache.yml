# Quantized Matmul Attention and KV Cache
steps:
  - label: "Correctness tests for Quantized Matmul Attention and KV Cache"
    key: "Quantized_Matmul_Attention_and_KV_Cache_CorrectnessTest"
    soft_fail: true
    agents:
      queue: tpu_v6e_queue
    commands:
      - echo "covered by performance test"
  - label: "Record correctness test result for Quantized Matmul Attention and KV Cache"
    key: "record_Quantized_Matmul_Attention_and_KV_Cache_CorrectnessTest"
    depends_on: "Quantized_Matmul_Attention_and_KV_Cache_CorrectnessTest"
    env:
      CI_TARGET: "Quantized Matmul Attention and KV Cache"
      CI_STAGE: "CorrectnessTest"
    agents:
      queue: tpu_v6e_queue
    commands:
      - |
        .buildkite/scripts/record_step_result.sh Quantized_Matmul_Attention_and_KV_Cache_CorrectnessTest

  - label: "Performance tests for Quantized Matmul Attention and KV Cache"
    key: "Quantized_Matmul_Attention_and_KV_Cache_PerformanceTest"
    depends_on: "record_Quantized_Matmul_Attention_and_KV_Cache_CorrectnessTest"
    soft_fail: true
    agents:
      queue: tpu_v6e_8_queue
    env:
      TEST_MODEL: RedHatAI/Meta-Llama-3.1-8B-Instruct-quantized.w8a8
      TENSOR_PARALLEL_SIZE: 1
      MINIMUM_THROUGHPUT_THRESHOLD: 12
      INPUT_LEN: 1800
      OUTPUT_LEN: 128
      PREFIX_LEN: 0
      MAX_MODEL_LEN: 10240
      MAX_NUM_SEQS: 1024
      MAX_NUM_BATCHED_TOKENS: 2048
    commands:
      - |
        .buildkite/scripts/run_in_docker.sh bash /workspace/tpu_inference/tests/e2e/benchmarking/benchmark.sh
  - label: "Record performance test result for Quantized Matmul Attention and KV Cache"
    key: "record_Quantized_Matmul_Attention_and_KV_Cache_PerformanceTest"
    depends_on: "Quantized_Matmul_Attention_and_KV_Cache_PerformanceTest"
    env:
      CI_TARGET: "Quantized Matmul Attention and KV Cache"
      CI_STAGE: "PerformanceTest"
    agents:
      queue: tpu_v6e_queue
    commands:
      - |
        .buildkite/scripts/record_step_result.sh Quantized_Matmul_Attention_and_KV_Cache_PerformanceTest
