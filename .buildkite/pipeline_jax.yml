steps:
  # -----------------------------------------------------------------
  # TEST STEPS - Calling wrapper, using python3 -m pytest
  # -----------------------------------------------------------------
   - label: "TPU Test 13: ragged_paged_attention_test.py"
     key: tpu_test_0
     soft_fail: true
     env:
       TPU_BACKEND_TYPE: "jax"
     agents:
       queue: tpu_v6e_queue
     commands:
       - .buildkite/scripts/run_in_docker.sh python3 -m pytest -s -v /workspace/tpu_commons/tests/ragged_paged_attention_test.py

   - label: "TPU Test 14: E2E vLLM MLPerf Benchmarking Run"
     key: tpu_test_1
     soft_fail: true
     env:
       TPU_BACKEND_TYPE: "jax"
     agents:
       queue: tpu_v6e_queue
     commands:
       - .buildkite/scripts/run_in_docker.sh bash /workspace/tpu_commons/tests/e2e/benchmarking/llama3.1_8b_mmlu.sh

  # -----------------------------------------------------------------
  # NOTIFICATION STEP
  # -----------------------------------------------------------------
   - label: "TPU V1 Test Notification"
     depends_on:
       - tpu_test_0
     agents:
       queue: tpu_v6e_queue
     commands: "bash .buildkite/scripts/check_results.sh"
